import numpy as np
import cv2
import imutils
import sys
import pytesseract
import pandas as pd
import time

pytesseract.pytesseract.tesseract_cmd = 'C:\\Program Files\\Tesseract-OCR\\tesseract.exe'

cam = cv2.VideoCapture(0)
cv2.namedWindow("test")

def capture():

    while True:
        ret, frame = cam.read()
        cv2.imshow("test", frame)
        
        cv2.imwrite('a.jpg', frame)
        extractor('a.jpg')
        break
    
def extractor(path):
    
    # read and resize image to the required size
    image = cv2.imread(path)
    image = imutils.resize(image, width=500)
    cv2.imshow("Original Image", image)

    # convert to gray scale
    gray = cv2.cvtColor(image, cv2.COLOR_BGR2GRAY)
    cv2.imshow("Grayscale Conversion", gray)

    # blur to reduce noise
    gray = cv2.bilateralFilter(gray, 11, 17, 17)
    cv2.imshow("Bilateral Filter", gray)

    # perform edge detection
    edged = cv2.Canny(gray, 170, 200)
    cv2.imshow("Canny Edges", edged)

    # find contours in the edged image
    (cnts, _) = cv2.findContours(edged.copy(), cv2.RETR_LIST, cv2.CHAIN_APPROX_SIMPLE)
    cnts=sorted(cnts, key = cv2.contourArea, reverse = True)[:30]

    NumberPlateCnt = None 
    count = 0
    # loop over contours
    for c in cnts:
        peri = cv2.arcLength(c, True)
        approx = cv2.approxPolyDP(c, 0.02 * peri, True)
        if len(approx) == 4:  
            NumberPlateCnt = approx 
            break

    img = cv2.cvtColor(gray,cv2.COLOR_BGR2RGB)
    text = pytesseract.image_to_string(img)
    if len(text)>7:
        a = '|!@#$%^&*()><{}[]_-.,"/\;:`~'
        for i in a:
            text = text.replace(i,'')
        print(text)

    raw_data = {'date':[time.asctime( time.localtime(time.time()))],'':[text]}
    df = pd.DataFrame(raw_data)
    df.to_csv('data.csv',mode='a')

    cv2.waitKey(0)
    cv2.destroyAllWindows()

capture()
#extractor('b.jpg')
